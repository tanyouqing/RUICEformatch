{"version":3,"file":"Login-C3IMSKWp.js","sources":["../../src/pages/auth/Login.vue"],"sourcesContent":["<template>\n  <VaForm ref=\"form\" @submit.prevent=\"submit\">\n    <h1 class=\"font-semibold text-4xl mb-4\">登录</h1>\n    <p class=\"text-base mb-4 leading-5\">\n      没有账号?\n      <RouterLink :to=\"{ name: 'signup' }\" class=\"font-semibold text-primary\">注册</RouterLink>\n    </p>\n    <VaInput\n      v-model=\"formData.email\"\n      :rules=\"[validators.required, validators.email]\"\n      class=\"mb-4\"\n      label=\"用户名\"\n      type=\"email\"\n    />\n    <VaValue v-slot=\"isPasswordVisible\" :default-value=\"false\">\n      <VaInput\n        v-model=\"formData.password\"\n        :rules=\"[validators.required]\"\n        :type=\"isPasswordVisible.value ? 'text' : 'password'\"\n        class=\"mb-4\"\n        label=\"密码\"\n        @clickAppendInner.stop=\"isPasswordVisible.value = !isPasswordVisible.value\"\n      >\n        <template #appendInner>\n          <VaIcon\n            :name=\"isPasswordVisible.value ? 'mso-visibility_off' : 'mso-visibility'\"\n            class=\"cursor-pointer\"\n            color=\"secondary\"\n          />\n        </template>\n      </VaInput>\n    </VaValue>\n\n    <div class=\"auth-layout__options flex flex-col sm:flex-row items-start sm:items-center justify-between\">\n      <VaCheckbox v-model=\"formData.keepLoggedIn\" class=\"mb-2 sm:mb-0\" label=\"记住密码\" />\n      <RouterLink :to=\"{ name: 'recover-password' }\" class=\"mt-2 sm:mt-0 sm:ml-1 font-semibold text-primary\">\n        忘记密码?\n      </RouterLink>\n    </div>\n\n    <div class=\"flex justify-center mt-4\">\n      <VaButton class=\"w-full\" @click=\"submit\"> 登录</VaButton>\n    </div>\n  </VaForm>\n</template>\n\n<script lang=\"ts\" setup>\nimport { reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useForm, useToast } from 'vuestic-ui'\nimport { validators } from '../../services/utils'\nimport axios from 'axios'\n\nconst { validate } = useForm('form')\nconst { push } = useRouter()\nconst { init } = useToast()\n\nconst formData = reactive({\n  email: '',\n  password: '',\n  keepLoggedIn: false,\n})\n\n// const submit = () => {\n//   if (validate()) {\n//     init({ message: \"You've successfully logged in\", color: 'success' })\n//     push({ name: 'dashboard' })\n//   }\n// }\nconst submit = async () => {\n  if (validate()) {\n    try {\n      // 向后端发送登录请求\n      const response = await axios.post('http://47.239.17.192:80/auth/login', {\n        email: formData.email,\n        password: formData.password,\n      })\n\n      if (response.status === 200) {\n        init({ message: '你已成功登录', color: 'success' })\n        push({ name: 'dashboard' })\n      }\n    } catch (error) {\n      const errorMessage = (error as any).response?.data?.error || '登录失败'\n      init({ message: errorMessage, color: 'danger' })\n    }\n  }\n}\n</script>\n"],"names":["validate","useForm","push","useRouter","init","useToast","formData","reactive","submit","axios","error","errorMessage","_b","_a"],"mappings":"8eAqDA,KAAM,CAAE,SAAAA,CAAA,EAAaC,EAAQ,MAAM,EAC7B,CAAE,KAAAC,GAASC,IACX,CAAE,KAAAC,GAASC,IAEXC,EAAWC,EAAS,CACxB,MAAO,GACP,SAAU,GACV,aAAc,EAAA,CACf,EAQKC,EAAS,SAAY,SACzB,GAAIR,IACE,GAAA,EAEe,MAAMS,EAAM,KAAK,qCAAsC,CACtE,MAAOH,EAAS,MAChB,SAAUA,EAAS,QAAA,CACpB,GAEY,SAAW,MACtBF,EAAK,CAAE,QAAS,SAAU,MAAO,SAAW,CAAA,EACvCF,EAAA,CAAE,KAAM,WAAA,CAAa,SAErBQ,EAAO,CACd,MAAMC,IAAgBC,GAAAC,EAAAH,EAAc,WAAd,YAAAG,EAAwB,OAAxB,YAAAD,EAA8B,QAAS,OAC7DR,EAAK,CAAE,QAASO,EAAc,MAAO,QAAU,CAAA,CACjD,CACF"}