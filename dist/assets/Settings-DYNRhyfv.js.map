{"version":3,"file":"Settings-DYNRhyfv.js","sources":["../../src/pages/settings/language-switcher/LanguageSwitcher.vue","../../src/pages/settings/theme-switcher/ThemeSwitcher.vue","../../src/stores/notifications.ts","../../src/pages/settings/notifications/Notifications.vue"],"sourcesContent":["<template>\n  <div class=\"flex items-center justify-between\">\n    <p>Language</p>\n    <div class=\"w-40\">\n      <VaSelect v-model=\"model\" :options=\"options\" />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nimport { useI18n } from 'vue-i18n'\n\ntype LanguageMap = Record<string, string>\n\nconst { locale } = useI18n()\n\nconst languages: LanguageMap = {\n  english: 'English',\n  spanish: 'Spanish',\n  brazilian_portuguese: 'PortuguÃªs',\n  simplified_chinese: 'Simplified Chinese',\n  persian: 'Persian',\n}\n\nconst languageCodes: LanguageMap = {\n  gb: languages.english,\n  es: languages.spanish,\n  br: languages.brazilian_portuguese,\n  cn: languages.simplified_chinese,\n  ir: languages.persian,\n}\n\nconst languageName: LanguageMap = Object.fromEntries(Object.entries(languageCodes).map(([key, value]) => [value, key]))\n\nconst options = Object.values(languageCodes)\n\nconst model = computed({\n  get() {\n    return languageCodes[locale.value]\n  },\n  set(value) {\n    locale.value = languageName[value]\n  },\n})\n</script>\n","<template>\n  <VaButtonToggle v-model=\"theme\" color=\"background-element\" border-color=\"background-element\" :options=\"options\" />\n</template>\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\n\nimport { useI18n } from 'vue-i18n'\n\nimport { useColors } from 'vuestic-ui'\n\nconst { applyPreset, currentPresetName } = useColors()\n\nconst theme = computed({\n  get() {\n    return currentPresetName.value\n  },\n  set(value) {\n    applyPreset(value)\n  },\n})\n\nconst { t } = useI18n()\n\nconst options = [\n  { label: t('buttonSelect.dark'), value: 'dark' },\n  { label: t('buttonSelect.light'), value: 'light' },\n]\n</script>\n","import { defineStore } from 'pinia'\n\nexport const useNotificationsStore = defineStore('notifications', {\n  state: () => {\n    return {\n      notifications: {\n        searchingForAJob: {\n          name: 'Searching for a job',\n          isEnabled: true,\n        },\n        hiringSomeone: {\n          name: 'Hiring someone',\n          isEnabled: false,\n        },\n        connectingWithOthers: {\n          name: 'Connecting with others',\n          isEnabled: true,\n        },\n        postingAndCommenting: {\n          name: 'Posting and commenting',\n          isEnabled: true,\n        },\n        messaging: {\n          name: 'Messaging',\n          isEnabled: true,\n        },\n        groups: {\n          name: 'Groups',\n          isEnabled: false,\n        },\n        pages: {\n          name: 'Pages',\n          isEnabled: true,\n        },\n        attendingEvents: {\n          name: 'Attending events',\n          isEnabled: true,\n        },\n        newsAndReports: {\n          name: 'News and reports',\n          isEnabled: false,\n        },\n        updatingYourProfile: {\n          name: 'Updating your profile',\n          isEnabled: true,\n        },\n        verifications: {\n          name: 'Verifications',\n          isEnabled: true,\n        },\n      },\n    }\n  },\n})\n","<template>\n  <div class=\"flex flex-col p-4 bg-backgroundSecondary rounded-lg\">\n    <h3 class=\"h3 mb-6\">Notifications you receive</h3>\n    <div v-for=\"notification in notifications\" :key=\"notification.name\" class=\"group\">\n      <div class=\"flex items-center justify-between overflow-x-hidden\">\n        <p class=\"text-regularLarge\">\n          {{ notification.name }}\n        </p>\n        <VaSwitch v-model=\"notification.isEnabled\" size=\"small\" />\n      </div>\n      <VaDivider class=\"py-4 group-last:hidden\" />\n    </div>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { useNotificationsStore } from '../../../stores/notifications'\n\nconst { notifications } = useNotificationsStore()\n</script>\n"],"names":["locale","useI18n","languages","languageCodes","languageName","key","value","options","model","computed","applyPreset","currentPresetName","useColors","theme","t","useNotificationsStore","defineStore","notifications"],"mappings":"8PAeM,KAAA,CAAE,OAAAA,GAAWC,IAEbC,EAAyB,CAC7B,QAAS,UACT,QAAS,UACT,qBAAsB,YACtB,mBAAoB,qBACpB,QAAS,SAAA,EAGLC,EAA6B,CACjC,GAAID,EAAU,QACd,GAAIA,EAAU,QACd,GAAIA,EAAU,qBACd,GAAIA,EAAU,mBACd,GAAIA,EAAU,OAAA,EAGVE,EAA4B,OAAO,YAAY,OAAO,QAAQD,CAAa,EAAE,IAAI,CAAC,CAACE,EAAKC,CAAK,IAAM,CAACA,EAAOD,CAAG,CAAC,CAAC,EAEhHE,EAAU,OAAO,OAAOJ,CAAa,EAErCK,EAAQC,EAAS,CACrB,KAAM,CACG,OAAAN,EAAcH,EAAO,KAAK,CACnC,EACA,IAAIM,EAAO,CACFN,EAAA,MAAQI,EAAaE,CAAK,CACnC,CAAA,CACD,kRClCD,KAAM,CAAE,YAAAI,EAAa,kBAAAC,CAAkB,EAAIC,EAAU,EAE/CC,EAAQJ,EAAS,CACrB,KAAM,CACJ,OAAOE,EAAkB,KAC3B,EACA,IAAIL,EAAO,CACTI,EAAYJ,CAAK,CACnB,CAAA,CACD,EAEK,CAAE,EAAAQ,GAAMb,IAERM,EAAU,CACd,CAAE,MAAOO,EAAE,mBAAmB,EAAG,MAAO,MAAO,EAC/C,CAAE,MAAOA,EAAE,oBAAoB,EAAG,MAAO,OAAQ,CAAA,oOCvBtCC,EAAwBC,EAAY,gBAAiB,CAChE,MAAO,KACE,CACL,cAAe,CACb,iBAAkB,CAChB,KAAM,sBACN,UAAW,EACb,EACA,cAAe,CACb,KAAM,iBACN,UAAW,EACb,EACA,qBAAsB,CACpB,KAAM,yBACN,UAAW,EACb,EACA,qBAAsB,CACpB,KAAM,yBACN,UAAW,EACb,EACA,UAAW,CACT,KAAM,YACN,UAAW,EACb,EACA,OAAQ,CACN,KAAM,SACN,UAAW,EACb,EACA,MAAO,CACL,KAAM,QACN,UAAW,EACb,EACA,gBAAiB,CACf,KAAM,mBACN,UAAW,EACb,EACA,eAAgB,CACd,KAAM,mBACN,UAAW,EACb,EACA,oBAAqB,CACnB,KAAM,wBACN,UAAW,EACb,EACA,cAAe,CACb,KAAM,gBACN,UAAW,EACb,CACF,CAAA,EAGN,CAAC,qMCpCK,KAAA,CAAE,cAAAC,GAAkBF"}